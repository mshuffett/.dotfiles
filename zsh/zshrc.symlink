# disable Ctrl+S control flow
stty stop undef
# export TERM="xterm-256color"
#
export ZSH_VAR_LIB_DIR=$HOME/.var/lib/zsh
[[ ! -d $ZSH_VAR_LIB_DIR ]] && mkdir -p $ZSH_VAR_LIB_DIR

export DEFAULT_USER=shufm002

# Ctrl-u: Deletes everything before cursor (u is on left)
#bindkey '^u' backward-kill-line
# Ctrl-o: Deletes everything after cursor (o is on right)
    # (Commonly Ctrl-k)
#bindkey '^o' kill-line

setopt extended_glob

# setopt nohistverify
# Report statistics on commands that take longer than 10 seconds
REPORTTIME=10

## Go up 5 directories with u 5
u () {
    set -A ud
    ud[1+${1-1}]=
    cd ${(j:../:)ud}
}

if [[ -z "$TERMCAP" ]] && [[ "$TERM" == "screen" ]]; then
  export TERMCAP='Co#256:'
fi

# bindkey "^[^[OC" forward-word
# bindkey "^[^[OD" backward-word

####################### BEGIN holman's code #####################

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/google-cloud-sdk/path.zsh.inc' ]; then . '/usr/local/google-cloud-sdk/path.zsh.inc'; fi

# Path manipulation
typeset -U path # force path array to have unique values
path=($HOME/.serverless/bin /Users/michael/opt/anaconda3/bin /usr/local/Cellar/node/13.11.0/bin ~/opt/anaconda3/bin /usr/local/Cellar/ruby/2.5.0/bin /usr/local/Cellar/emacs/25.3/bin  $HOME/bin /usr/bin/ /usr/local/Cellar/python/2.7.12/bin /usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/Current/bin /usr/local/opt/coreutils/libexec/gnubin /usr/local/bin ~/lighttable-0.8.0-alpha-linux ./bin $HOME/.rbenv/shims /usr/local/bin /usr/local/sbin $HOME/.sfs $ZSH/bin /Applications/MiniZincIDE.app/Contents/Resources /Users/michael/Library/Python/3.7/bin /usr/local/Cellar/node/12.12.0/lib/node_modules/@aws-amplify/cli/bin $HOME/go/bin "$path[@]")

typeset -U manpath # force path array to have unique values
manpath=(/usr/local/opt/coreutils/libexec/gnuman /usr/local/man /usr/local/mysql/man /usr/local/git/man "$manpath[@]")

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

export GOPATH=$HOME/go
source "$GOPATH/src/github.com/sachaos/todoist/todoist_functions.sh"
PROG=todoist source "$GOPATH/pkg/mod/github.com/urfave/cli@v1.20.0/autocomplete/zsh_autocomplete"


# TODO may want to try https://github.com/zdharma/zinit here which is a more modern looking async version of zplug
export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh
# Leads to significant speedup https://news.ycombinator.com/item?id=21281149
touch $ZPLUG_LOADFILE

zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# zplug "joel-porquet/zsh-dircolors-solarized" This was failing to load
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/git-extras", from:oh-my-zsh
zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/pip", from:oh-my-zsh
zplug "plugins/virtualenv", from:oh-my-zsh
zplug "plugins/virtualenvwrapper", from:oh-my-zsh

# https://github.com/bhilburn/powerlevel9k/wiki/Stylizing-Your-Prompt
# POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='black'
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='008'
POWERLEVEL9K_MODE='nerdfont-complete'
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rbenv vcs virtualenv)
if [[ "$(uname -s)" == "Darwin" ]]
then
  POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs virtualenv)
fi
# export TERM="xterm-256color"
# zplug "bhilburn/powerlevel9k", as:theme
SPACESHIP_PROMPT_ADD_NEWLINE=true
SPACESHIP_CHAR_SYMBOL=" \uf0e7"
SPACESHIP_CHAR_PREFIX="\uf296"
SPACESHIP_CHAR_SUFFIX=(" ")
SPACESHIP_CHAR_COLOR_SUCCESS="yellow"
SPACESHIP_PROMPT_DEFAULT_PREFIX="$USER"
SPACESHIP_PROMPT_FIRST_PREFIX_SHOW="true"
SPACESHIP_USER_SHOW="true"
zplug denysdovhan/spaceship-prompt, use:spaceship.zsh, from:github, as:theme

# AUTOENV_FILE_ENTER=.autoenv.zsh
# AUTOENV_FILE_LEAVE=.autoenv.zsh
# AUTOENV_HANDLE_LEAVE=1
# zplug "Tarrasch/zsh-autoenv"
zplug "djui/alias-tips"
zplug "zsh-users/zsh-completions"
zplug "esc/conda-zsh-completion"
export ENHANCD_FILTER="fzy"
zplug "b4b4r07/enhancd", use:init.sh
zplug "zsh-users/zsh-autosuggestions", defer:1
zplug "zsh-users/zsh-syntax-highlighting", defer:2 # Should be loaded 2nd last.
zplug "zsh-users/zsh-history-substring-search", defer:3 # Should be loaded last.

# Install plugins if there are plugins that have not been installed
if ! zplug check; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

fpath=($ZSH/functions $fpath)

autoload -U $ZSH/functions/*(:t)

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/google-cloud-sdk/completion.zsh.inc' ]; then . '/usr/local/google-cloud-sdk/completion.zsh.inc'; fi

for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done
source $(dirname $(gem which colorls))/tab_complete.sh

unset config_files

export LESS='-iR'

eval "$(fasd --init auto)"

bindkey "^S" history-incremental-pattern-search-forward

setopt autocd

JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home
HADOOP_VERSION=2.7.3
HADOOP_HOME=/usr/local/Cellar/hadoop/2.7.3
HADOOP_CONF_DIR=/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop

# https://github.com/DomT4/homebrew-autoupdate
export HOMEBREW_NO_AUTO_UPDATE="1"

source ~/.iterm2_shell_integration.zsh

export SPARK_HOME='/Users/michael/pixiedust/bin/spark/spark-2.4.3-bin-hadoop2.7'
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)

# added by travis gem
[ -f /Users/michael/.travis/travis.sh ] && source /Users/michael/.travis/travis.sh

export MapboxAccessToken=pk.eyJ1Ijoic3dpemVjIiwiYSI6ImNqcHdnaDR1MDB0bWozeG1tY28wcHVoM2UifQ.RxzaHH4i1_U32eiWoOc_jQ

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/__tabtab.zsh ]] && . ~/.config/tabtab/__tabtab.zsh || true

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/michael/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/michael/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/michael/opt/anaconda3/etc/profile.d/conda.sh"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

typeset -U path # force path array to have unique values
path=(/opt/homebrew/bin $HOME/.serverless/bin /Users/michael/opt/anaconda3/bin /usr/local/Cellar/node/13.11.0/bin ~/opt/anaconda3/bin /usr/local/Cellar/ruby/2.5.0/bin /usr/local/Cellar/emacs/25.3/bin  $HOME/bin /usr/bin/ /usr/local/Cellar/python/2.7.12/bin /usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/Current/bin /usr/local/opt/coreutils/libexec/gnubin /usr/local/bin ~/lighttable-0.8.0-alpha-linux ./bin $HOME/.rbenv/shims /usr/local/bin /usr/local/sbin $HOME/.sfs $ZSH/bin /Applications/MiniZincIDE.app/Contents/Resources /Users/michael/Library/Python/3.7/bin /usr/local/Cellar/node/12.12.0/lib/node_modules/@aws-amplify/cli/bin "$path[@]")

conda activate python38

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# AWS Completion
complete -C '/usr/local/bin/aws_completer' aws

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
